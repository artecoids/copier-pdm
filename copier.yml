# CONFIGURATION
_subdirectory: project

_skip_if_exists:
  - CHANGELOG.md

_tasks:
  - "{% if pdm_local_hooks %}
      pdm add --dev
        autoflake
        pyupgrade
        black
        blacken-docs
        isort
        flake8
        flake8-bugbear
        pydocstyle[toml]
        {% if commitizen %}commitizen{% endif %}
      || true
    {% else %}
      true
    {% endif %}"
  - pre-commit install -t pre-commit -t commit-msg || true
  - git init
  - pdm install
  - pdm run python tasks/_post_generation.py
  - git add .

# PROMPT
project_name:
  type: str
  help: Your project name in CamelCase

project_description:
  type: str
  help: Your project description

author_fullname:
  type: str
  help: Your full name

author_email:
  type: str
  help: Your email

author_username:
  type: str
  help: Your username (e.g. on GitHub)

copyright_holder:
  type: str
  help: The name of the person/entity holding the copyright
  default: "{{ author_fullname }}"

copyright_holder_email:
  type: str
  help: The email of the person/entity holding the copyright
  default: "{{ author_email }}"

copyright_date:
  type: str
  help: The copyright date
  default: "2023"

copyright_license:
  type: str
  help: Your project's license
  default: ISC License
  choices:
    - Academic Free License v3.0
    - Apache License 2.0
    - Artistic License 2.0
    - BSD 2-Clause "Simplified" License
    - BSD 3-Clause Clear License
    - BSD 3-Clause "New" or "Revised" License
    - Boost Software License 1.0
    - Creative Commons Attribution 4.0
    - Creative Commons Attribution Share Alike 4.0
    - Creative Commons Zero v1.0 Universal
    - Do What The F*ck You Want To Public License
    - Educational Community License v2.0
    - Eclipse Public License 1.0
    - Eclipse Public License 2.0
    - European Union Public License 1.1
    - European Union Public License 1.2
    - GNU Affero General Public License v3.0
    - GNU General Public License v2.0
    - GNU General Public License v3.0
    - GNU Lesser General Public License v2.1
    - GNU Lesser General Public License v3.0
    - ISC License
    - LaTeX Project Public License v1.3c
    - MIT License
    - Mozilla Public License 2.0
    - Microsoft Public License
    - Microsoft Reciprocal License
    - University of Illinois/NCSA Open Source License
    - SIL Open Font License 1.1
    - Open Software License 3.0
    - PostgreSQL License
    - The Unlicense
    - zlib License

python_package_import_name:
  type: str
  help: Your Python package import name (for `import NAME` in Python code)
  default: "{{ project_name|lower|replace('-', '_')|replace(' ', '_') }}"

python_package_requires_python:
  type: str
  help: The python version range your project supports
  default: ">=3.11"

python_package_distribution_name:
  type: str
  help: Your Python package distribution name (for `pip install NAME`)
  default: "{{ project_name|lower|replace('_', '-')|replace(' ', '-') }}"

repository_provider:
  type: str
  help: Your repository provider
  default: github.com
  choices:
    - github.com
    - gitlab.com

repository_namespace:
  type: str
  help: Your repository namespace
  default: "{{ author_username }}"

repository_name:
  type: str
  help: Your repository name
  default: "{{ project_name|lower|replace('_', '-')|replace(' ', '-') }}"

repository_main_branches:
  default: [main]
  type: yaml
  help: Main branches used by your organization (Usually under CI)

repository_protect_branches:
  default: "{{ repository_main_branches }}"
  type: yaml
  help:
    Protected branches where you will not be able to do direct commits. Set to null to
    disable. Otherwise, it's an array of strings.

github:
  default: "{{ repository_provider == 'github.com' }}"
  type: bool
  when: "{{ repository_provider == 'github.com' }}"
  help: Create configurations specific to GitHub? This includes a workflow to check code,
    issue and PR templates...

commitizen:
  default: false
  type: bool
  help: Use Commitizen to lint commit messages?

build_cli:
  type: bool
  help: Will you implement a command line (for use in the shell)
  default: false

cli_name:
  type: str
  help: Your CLI name
  when: "{{build_cli}}"
  default: "{{ project_name|lower|replace('_', '-')|replace(' ', '-') }}"

build_doc:
  type: bool
  help: Do you want to include a doc site?
  default: no

pdm_local_hooks:
  default: false
  type: bool
  help: Do you prefer to run local hooks prefixed with `pdm run`?

    In this case, you are supposed to maintain these dependencies locally using `pdm
    add --dev`. Provides better integration with IDEs and Dependabot.
